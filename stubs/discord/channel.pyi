from typing import Any, Optional

from .mixins import Hashable

from discord.abc import Messageable, GuildChannel


class TextChannel(Messageable, GuildChannel, Hashable):
    id: Any = ...
    def __init__(self, state: Any, guild: Any, data: Any) -> None: ...
    @property
    def type(self): ...
    def permissions_for(self, member: Any): ...
    @property
    def members(self): ...
    def is_nsfw(self): ...
    def is_news(self): ...
    @property
    def last_message(self): ...
    async def edit(self, *, reason: Optional[Any] = ..., **options: Any) -> None: ...
    async def clone(self, *, name: Optional[Any] = ..., reason: Optional[Any] = ...): ...
    async def delete_messages(self, messages: Any) -> None: ...
    async def purge(self, *, limit: int = ..., check: Optional[Any] = ..., before: Optional[Any] = ..., after: Optional[Any] = ..., around: Optional[Any] = ..., oldest_first: bool = ..., bulk: bool = ...): ...
    async def webhooks(self): ...
    async def create_webhook(self, name: Any, *, avatar: Optional[Any] = ..., reason: Optional[Any] = ...): ...
    async def follow(self, destination: Any, *, reason: Optional[Any] = ...): ...
    def get_partial_message(self, message_id: Any): ...